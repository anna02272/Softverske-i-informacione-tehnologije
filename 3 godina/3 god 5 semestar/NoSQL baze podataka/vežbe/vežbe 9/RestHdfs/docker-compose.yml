version: "3.1"

services:
  #Our service.
  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "storage-server"
    hostname: "storage-server"
    #Mapping ports
    ports:
      # <port_on_local>:<port_in_machine>
      - 8080:8080
    #Will be accessible through os.Getenv("PORT")
    environment:
      - PORT=8080
      # NoSQL: environment variable holding connection URI for HDFS (Hadoop Distributed File System)
      - HDFS_URI=namenode:9000
    volumes:
      - ./files:/usr/bin/files
    depends_on:
      namenode:
        condition: service_healthy
      datanode1:
        condition: service_healthy
      datanode2:
        condition: service_healthy
      datanode3:
        condition: service_healthy

  # NoSQL: HDFS - Hadoop Distributed File System
  # UI overview of the HDFS cluster and file structure: http://localhost:9870
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hdfs.env

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode1
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hdfs.env

  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode2
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hdfs.env

  datanode3:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode3
    volumes:
      - hadoop_datanode3:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hdfs.env

volumes:
  hadoop_namenode:
  hadoop_datanode1:
  hadoop_datanode2:
  hadoop_datanode3: